# -*- coding: utf-8 -*-
"""lr_3_task_5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nViDZmBGumRffGABXB-Y1FBCGB_oZMTD
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.metrics import mean_squared_error

m = 100
X = 6 * np.random.rand(m, 1) - 3
y = 0.6 * X ** 2 + X + 2 + np.random.randn(m, 1)

plt.figure(figsize=(10, 6))
plt.scatter(X, y, color="blue", label="Дані")
plt.title("Початкові дані")
plt.xlabel("X")
plt.ylabel("y")
plt.legend()
plt.show()

lin_reg = LinearRegression()
lin_reg.fit(X, y)
y_pred_linear = lin_reg.predict(X)

plt.figure(figsize=(10, 6))
plt.scatter(X, y, color="blue", label="Дані")
plt.plot(X, y_pred_linear, color="red", label="Лінійна регресія")
plt.title("Лінійна регресія")
plt.xlabel("X")
plt.ylabel("y")
plt.legend()
plt.show()

poly_features = PolynomialFeatures(degree=2, include_bias=False)
X_poly = poly_features.fit_transform(X)

lin_reg_poly = LinearRegression()
lin_reg_poly.fit(X_poly, y)
y_pred_poly = lin_reg_poly.predict(X_poly)

plt.figure(figsize=(10, 6))
plt.scatter(X, y, color="blue", label="Дані")
plt.plot(X, y_pred_poly, color="green", label="Поліноміальна регресія")
plt.title("Поліноміальна регресія")
plt.xlabel("X")
plt.ylabel("y")
plt.legend()
plt.show()

mse_linear = mean_squared_error(y, y_pred_linear)
mse_poly = mean_squared_error(y, y_pred_poly)

print("Коефіцієнти лінійної регресії:")
print(f"Інтерцепт: {lin_reg.intercept_[0]}, Коефіцієнт: {lin_reg.coef_[0][0]}")
print(f"Середньоквадратична похибка (MSE) для лінійної регресії: {mse_linear:.4f}")

print("\nКоефіцієнти поліноміальної регресії:")
print(f"Інтерцепт: {lin_reg_poly.intercept_[0]}, Коефіцієнти: {lin_reg_poly.coef_}")
print(f"Середньоквадратична похибка (MSE) для поліноміальної регресії: {mse_poly:.4f}")